Type

Gradle
	Pros:
	최근 속도가 빨라 선호되는 추세입니다.
	STS4에서 Spring Initializr를 통해 프로젝트 생성 시 기본 선택으로 제공되는 경우가 많습니다.
	Cons:
	익숙하지 않은 개발자에게는 Maven보다 학습 곡선이 있을 수 있습니다. 

Maven
	Pros:
	오래전부터 사용되어 온 안정적인 빌드 도구입니다. 
	다양한 프로젝트에서 표준적으로 사용되어 호환성이 높습니다. 
	Cons:
	Gradle에 비해 속도가 느릴 수 있습니다. 
	빌드 파일(pom.xml)이 상대적으로 길어질 수 있습니다. 

----------------------------------------------------------------
Packaging

JAR와 WAR 파일은 스프링 부트 프로젝트의 빌드 및 배포 방식에서 중요한 차이를 보입니다. JAR 파일은 독립적인 실행 파일로, 내장 서버(embedded server)를 포함하여 WAS 없이도 애플리케이션을 직접 실행할 수 있는 반면, WAR 파일은 외부 웹 서버(WAS)에 배포하기 위한 파일로, 서블릿 컨테이너의 기능을 활용합니다.  

JAR (Java Archive)
	특징: 자바 클래스, 리소스, 메타데이터 등을 하나의 압축 파일로 묶습니다. 
	목적: 독립적인 애플리케이션이나 라이브러리 형태로 배포하고 실행하는 것이 목적입니다. 
	스프링 부트와의 관계: 스프링 부트 프로젝트를 기본적으로 JAR(executable JAR)로 빌드할 수 있으며, 이는 내장된 톰캣과 같은 웹 서버와 함께 실행됩니다. 
	용도: 애플리케이션 서버가 필요 없는 독립적인 애플리케이션을 개발하거나 라이브러리로 사용할 때 적합합니다. 

WAR (Web Application Archive)
	특징: 웹 애플리케이션을 구성하는 모든 요소(JSP, 서블릿, HTML, CSS 등)를 포함하며, 특정 디렉토리 구조(WEB-INF, META-INF 등)를 가집니다. 
	목적: 톰캣, 제티 같은 웹 애플리케이션 서버(WAS)에 배포하여 실행하는 것이 목적입니다. 
	스프링 부트와의 관계: 전통적인 웹 개발 방식으로, 외장 WAS에 배포해야 할 경우 WAR로 빌드합니다. 
	용도: WAS 환경이 이미 구축되어 있는 서버에 배포해야 하는 경우 사용합니다. 

----------------------------------------------------------------